# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T02:48:25+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class AccessReview(BaseModel):
    group: Optional[str] = Field(
        None, description='Group is the API Group of the Resource. "*" means all.'
    )
    name: Optional[str] = Field(
        None,
        description='Name is the name of the resource being requested. Empty means all.',
    )
    ns: Optional[str] = Field(
        None,
        description='Namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces. Both are represented by "" (empty).',
    )
    resource: Optional[str] = Field(
        None,
        description='Resource is the optional resource type requested. "*" means all.',
    )
    subresource: Optional[str] = Field(
        None, description='Subresource is the optional subresource type.'
    )
    verb: Optional[str] = Field(
        None,
        description='Verb is a Kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. "*" means all.',
    )
    version: Optional[str] = Field(
        None, description='Version is the API Version of the Resource. "*" means all.'
    )


class CloudDlpDataProfile(BaseModel):
    dataProfile: Optional[str] = Field(
        None,
        description='Name of the data profile, for example, `projects/123/locations/europe/tableProfiles/8383929`.',
    )


class CloudDlpInspection(BaseModel):
    fullScan: Optional[bool] = Field(
        None,
        description='Whether Cloud DLP scanned the complete resource or a sampled subset.',
    )
    infoType: Optional[str] = Field(
        None,
        description='The [type of information](https://cloud.google.com/dlp/docs/infotypes-reference) found, for example, `EMAIL_ADDRESS` or `STREET_ADDRESS`.',
    )
    infoTypeCount: Optional[str] = Field(
        None,
        description='The number of times Cloud DLP found this infoType within this job and resource.',
    )
    inspectJob: Optional[str] = Field(
        None,
        description='Name of the inspection job, for example, `projects/123/locations/europe/dlpJobs/i-8383929`.',
    )


class Compliance(BaseModel):
    ids: Optional[List[str]] = Field(
        None, description='Policies within the standard/benchmark e.g. A.12.4.1'
    )
    standard: Optional[str] = Field(
        None,
        description='Refers to industry wide standards or benchmarks e.g. "cis", "pci", "owasp", etc.',
    )
    version: Optional[str] = Field(
        None, description='Version of the standard/benchmark e.g. 1.1'
    )


class ModuleEnablementState(Enum):
    ENABLEMENT_STATE_UNSPECIFIED = 'ENABLEMENT_STATE_UNSPECIFIED'
    INHERITED = 'INHERITED'
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Config(BaseModel):
    moduleEnablementState: Optional[ModuleEnablementState] = Field(
        None,
        description='The state of enablement for the module at its level of the resource hierarchy.',
    )
    value: Optional[Dict[str, Any]] = Field(
        None,
        description='The configuration value for the module. The absence of this field implies its inheritance from the parent.',
    )


class Protocol(Enum):
    PROTOCOL_UNSPECIFIED = 'PROTOCOL_UNSPECIFIED'
    ICMP = 'ICMP'
    TCP = 'TCP'
    UDP = 'UDP'
    GRE = 'GRE'
    ESP = 'ESP'


class Connection(BaseModel):
    destinationIp: Optional[str] = Field(
        None,
        description='Destination IP address. Not present for sockets that are listening and not connected.',
    )
    destinationPort: Optional[int] = Field(
        None,
        description='Destination port. Not present for sockets that are listening and not connected.',
    )
    protocol: Optional[Protocol] = Field(
        None, description='IANA Internet Protocol Number such as TCP(6) and UDP(17).'
    )
    sourceIp: Optional[str] = Field(None, description='Source IP address.')
    sourcePort: Optional[int] = Field(None, description='Source port.')


class Contact(BaseModel):
    email: Optional[str] = Field(
        None, description='An email address. For example, "`person123@company.com`".'
    )


class ContactDetails(BaseModel):
    contacts: Optional[List[Contact]] = Field(None, description='A list of contacts')


class ServiceEnablementState(Enum):
    ENABLEMENT_STATE_UNSPECIFIED = 'ENABLEMENT_STATE_UNSPECIFIED'
    INHERITED = 'INHERITED'
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class ContainerThreatDetectionSettings(BaseModel):
    modules: Optional[Dict[str, Config]] = Field(
        None,
        description="The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
    )
    name: Optional[str] = Field(
        None,
        description='The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings',
    )
    serviceAccount: Optional[str] = Field(
        None,
        description='Output only. The service account used by Container Threat Detection for scanning. Service accounts are scoped at the project level meaning this field will be empty at any level above a project.',
    )
    serviceEnablementState: Optional[ServiceEnablementState] = Field(
        None,
        description='The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.',
    )
    updateTime: Optional[str] = Field(
        None, description='Output only. The time the settings were last updated.'
    )


class AttackComplexity(Enum):
    ATTACK_COMPLEXITY_UNSPECIFIED = 'ATTACK_COMPLEXITY_UNSPECIFIED'
    ATTACK_COMPLEXITY_LOW = 'ATTACK_COMPLEXITY_LOW'
    ATTACK_COMPLEXITY_HIGH = 'ATTACK_COMPLEXITY_HIGH'


class AttackVector(Enum):
    ATTACK_VECTOR_UNSPECIFIED = 'ATTACK_VECTOR_UNSPECIFIED'
    ATTACK_VECTOR_NETWORK = 'ATTACK_VECTOR_NETWORK'
    ATTACK_VECTOR_ADJACENT = 'ATTACK_VECTOR_ADJACENT'
    ATTACK_VECTOR_LOCAL = 'ATTACK_VECTOR_LOCAL'
    ATTACK_VECTOR_PHYSICAL = 'ATTACK_VECTOR_PHYSICAL'


class AvailabilityImpact(Enum):
    IMPACT_UNSPECIFIED = 'IMPACT_UNSPECIFIED'
    IMPACT_HIGH = 'IMPACT_HIGH'
    IMPACT_LOW = 'IMPACT_LOW'
    IMPACT_NONE = 'IMPACT_NONE'


class ConfidentialityImpact(Enum):
    IMPACT_UNSPECIFIED = 'IMPACT_UNSPECIFIED'
    IMPACT_HIGH = 'IMPACT_HIGH'
    IMPACT_LOW = 'IMPACT_LOW'
    IMPACT_NONE = 'IMPACT_NONE'


class IntegrityImpact(Enum):
    IMPACT_UNSPECIFIED = 'IMPACT_UNSPECIFIED'
    IMPACT_HIGH = 'IMPACT_HIGH'
    IMPACT_LOW = 'IMPACT_LOW'
    IMPACT_NONE = 'IMPACT_NONE'


class PrivilegesRequired(Enum):
    PRIVILEGES_REQUIRED_UNSPECIFIED = 'PRIVILEGES_REQUIRED_UNSPECIFIED'
    PRIVILEGES_REQUIRED_NONE = 'PRIVILEGES_REQUIRED_NONE'
    PRIVILEGES_REQUIRED_LOW = 'PRIVILEGES_REQUIRED_LOW'
    PRIVILEGES_REQUIRED_HIGH = 'PRIVILEGES_REQUIRED_HIGH'


class Scope(Enum):
    SCOPE_UNSPECIFIED = 'SCOPE_UNSPECIFIED'
    SCOPE_UNCHANGED = 'SCOPE_UNCHANGED'
    SCOPE_CHANGED = 'SCOPE_CHANGED'


class UserInteraction(Enum):
    USER_INTERACTION_UNSPECIFIED = 'USER_INTERACTION_UNSPECIFIED'
    USER_INTERACTION_NONE = 'USER_INTERACTION_NONE'
    USER_INTERACTION_REQUIRED = 'USER_INTERACTION_REQUIRED'


class Cvssv3(BaseModel):
    attackComplexity: Optional[AttackComplexity] = Field(
        None,
        description="This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.",
    )
    attackVector: Optional[AttackVector] = Field(
        None,
        description='Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. This metric reflects the context by which vulnerability exploitation is possible.',
    )
    availabilityImpact: Optional[AvailabilityImpact] = Field(
        None,
        description='This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability.',
    )
    baseScore: Optional[float] = Field(
        None, description='The base score is a function of the base metric scores.'
    )
    confidentialityImpact: Optional[ConfidentialityImpact] = Field(
        None,
        description='This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.',
    )
    integrityImpact: Optional[IntegrityImpact] = Field(
        None,
        description='This metric measures the impact to integrity of a successfully exploited vulnerability.',
    )
    privilegesRequired: Optional[PrivilegesRequired] = Field(
        None,
        description='This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability.',
    )
    scope: Optional[Scope] = Field(
        None,
        description='The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.',
    )
    userInteraction: Optional[UserInteraction] = Field(
        None,
        description='This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component.',
    )


class Database(BaseModel):
    displayName: Optional[str] = Field(
        None,
        description='The human readable name of the database the user connected to.',
    )
    grantees: Optional[List[str]] = Field(
        None,
        description='The target usernames/roles/groups of a SQL privilege grant (not an IAM policy change).',
    )
    name: Optional[str] = Field(
        None,
        description='The full resource name of the database the user connected to, if it is supported by CAI. (https://google.aip.dev/122#full-resource-names)',
    )
    query: Optional[str] = Field(
        None, description='The SQL statement associated with the relevant access.'
    )
    userName: Optional[str] = Field(
        None,
        description='The username used to connect to the DB. This may not necessarily be an IAM principal, and has no required format.',
    )


class Type(Enum):
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    STANDARD = 'STANDARD'
    TRIAL = 'TRIAL'
    ALPHA = 'ALPHA'
    DEMO = 'DEMO'
    PAY_AS_YOU_GO = 'PAY_AS_YOU_GO'


class Details(BaseModel):
    endTime: Optional[str] = Field(
        None, description='The time the subscription has or will end.'
    )
    startTime: Optional[str] = Field(
        None, description='The time the subscription has or will start.'
    )
    type: Optional[Type] = Field(None, description='The type of subscription')


class Detection(BaseModel):
    binary: Optional[str] = Field(
        None,
        description='The name of the binary associated with the memory hash signature detection.',
    )
    percentPagesMatched: Optional[float] = Field(
        None,
        description='The percentage of memory page hashes in the signature that were matched.',
    )


class EnvironmentVariable(BaseModel):
    name: Optional[str] = Field(
        None, description='Environment variable name as a JSON encoded string.'
    )
    val: Optional[str] = Field(
        None, description='Environment variable value as a JSON encoded string.'
    )


class EventThreatDetectionSettings(BaseModel):
    modules: Optional[Dict[str, Config]] = Field(
        None,
        description="The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
    )
    name: Optional[str] = Field(
        None,
        description='The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings',
    )
    serviceEnablementState: Optional[ServiceEnablementState] = Field(
        None,
        description='The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.',
    )
    updateTime: Optional[str] = Field(
        None, description='Output only. The time the settings were last updated.'
    )


class ExfilResource(BaseModel):
    components: Optional[List[str]] = Field(
        None,
        description='Subcomponents of the asset that is exfiltrated - these could be URIs used during exfiltration, table names, databases, filenames, etc. For example, multiple tables may be exfiltrated from the same CloudSQL instance, or multiple files from the same Cloud Storage bucket.',
    )
    name: Optional[str] = Field(
        None,
        description="Resource's URI (https://google.aip.dev/122#full-resource-names)",
    )


class Exfiltration(BaseModel):
    sources: Optional[List[ExfilResource]] = Field(
        None,
        description='If there are multiple sources, then the data is considered "joined" between them. For instance, BigQuery can join multiple tables, and each table would be considered a source.',
    )
    targets: Optional[List[ExfilResource]] = Field(
        None,
        description='If there are multiple targets, each target would get a complete copy of the "joined" source data.',
    )


class Expr(BaseModel):
    description: Optional[str] = Field(
        None,
        description='Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.',
    )
    expression: Optional[str] = Field(
        None,
        description='Textual representation of an expression in Common Expression Language syntax.',
    )
    location: Optional[str] = Field(
        None,
        description='Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.',
    )
    title: Optional[str] = Field(
        None,
        description='Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.',
    )


class File(BaseModel):
    contents: Optional[str] = Field(
        None,
        description='Prefix of the file contents as a JSON encoded string. (Currently only populated for Malicious Script Executed findings.)',
    )
    hashedSize: Optional[str] = Field(
        None,
        description='The length in bytes of the file prefix that was hashed. If hashed_size == size, any hashes reported represent the entire file.',
    )
    partiallyHashed: Optional[bool] = Field(
        None, description='True when the hash covers only a prefix of the file.'
    )
    path: Optional[str] = Field(
        None, description='Absolute path of the file as a JSON encoded string.'
    )
    sha256: Optional[str] = Field(
        None,
        description='SHA256 hash of the first hashed_size bytes of the file encoded as a hex string. If hashed_size == size, sha256 represents the SHA256 hash of the entire file.',
    )
    size: Optional[str] = Field(None, description='Size of the file in bytes.')


class FindingClass(Enum):
    FINDING_CLASS_UNSPECIFIED = 'FINDING_CLASS_UNSPECIFIED'
    THREAT = 'THREAT'
    VULNERABILITY = 'VULNERABILITY'
    MISCONFIGURATION = 'MISCONFIGURATION'
    OBSERVATION = 'OBSERVATION'
    SCC_ERROR = 'SCC_ERROR'


class Mute(Enum):
    MUTE_UNSPECIFIED = 'MUTE_UNSPECIFIED'
    MUTED = 'MUTED'
    UNMUTED = 'UNMUTED'
    UNDEFINED = 'UNDEFINED'


class Severity(Enum):
    SEVERITY_UNSPECIFIED = 'SEVERITY_UNSPECIFIED'
    CRITICAL = 'CRITICAL'
    HIGH = 'HIGH'
    MEDIUM = 'MEDIUM'
    LOW = 'LOW'


class State(Enum):
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class Folder(BaseModel):
    resourceFolder: Optional[str] = Field(
        None,
        description='Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name',
    )
    resourceFolderDisplayName: Optional[str] = Field(
        None, description='The user defined display name for this folder.'
    )


class Geolocation(BaseModel):
    regionCode: Optional[str] = Field(None, description='A CLDR.')


class GoogleCloudSecuritycenterV1BigQueryExport(BaseModel):
    createTime: Optional[str] = Field(
        None,
        description='Output only. The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.',
    )
    dataset: Optional[str] = Field(
        None,
        description='The dataset to write findings\' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).',
    )
    description: Optional[str] = Field(
        None, description='The description of the export (max of 1024 characters).'
    )
    filter: Optional[str] = Field(
        None,
        description='Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.',
    )
    mostRecentEditor: Optional[str] = Field(
        None,
        description='Output only. Email address of the user who last edited the BigQuery export. This field is set by the server and will be ignored if provided on export creation or update.',
    )
    name: Optional[str] = Field(
        None,
        description='The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format: "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.',
    )
    principal: Optional[str] = Field(
        None,
        description='Output only. The service account that needs permission to create table and upload data to the BigQuery dataset.',
    )
    updateTime: Optional[str] = Field(
        None,
        description='Output only. The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.',
    )


class GoogleCloudSecuritycenterV1BulkMuteFindingsResponse(BaseModel):
    pass


class EnablementState(Enum):
    ENABLEMENT_STATE_UNSPECIFIED = 'ENABLEMENT_STATE_UNSPECIFIED'
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class GoogleCloudSecuritycenterV1ExternalSystem(BaseModel):
    assignees: Optional[List[str]] = Field(
        None,
        description='References primary/secondary etc assignees in the external system.',
    )
    externalSystemUpdateTime: Optional[str] = Field(
        None,
        description="The most recent time when the corresponding finding's ticket/tracker was updated in the external system.",
    )
    externalUid: Optional[str] = Field(
        None,
        description="Identifier that's used to track the given finding in the external system.",
    )
    name: Optional[str] = Field(
        None,
        description='Full resource name of the external system, for example: "organizations/1234/sources/5678/findings/123456/externalSystems/jira", "folders/1234/sources/5678/findings/123456/externalSystems/jira", "projects/1234/sources/5678/findings/123456/externalSystems/jira"',
    )
    status: Optional[str] = Field(
        None,
        description="Most recent status of the corresponding finding's ticket/tracker in the external system.",
    )


class GoogleCloudSecuritycenterV1MuteConfig(BaseModel):
    createTime: Optional[str] = Field(
        None,
        description='Output only. The time at which the mute config was created. This field is set by the server and will be ignored if provided on config creation.',
    )
    description: Optional[str] = Field(
        None, description='A description of the mute config.'
    )
    displayName: Optional[str] = Field(
        None, description='The human readable name to be displayed for the mute config.'
    )
    filter: Optional[str] = Field(
        None,
        description='Required. An expression that defines the filter to apply across create/update events of findings. While creating a filter string, be mindful of the scope in which the mute configuration is being created. E.g., If a filter contains project = X but is created under the project = Y scope, it might not match any findings. The following field and operator combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:` * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`',
    )
    mostRecentEditor: Optional[str] = Field(
        None,
        description='Output only. Email address of the user who last edited the mute config. This field is set by the server and will be ignored if provided on config creation or update.',
    )
    name: Optional[str] = Field(
        None,
        description='This field will be ignored if provided on config creation. Format "organizations/{organization}/muteConfigs/{mute_config}" "folders/{folder}/muteConfigs/{mute_config}" "projects/{project}/muteConfigs/{mute_config}"',
    )
    updateTime: Optional[str] = Field(
        None,
        description='Output only. The most recent time at which the mute config was updated. This field is set by the server and will be ignored if provided on config creation or update.',
    )


class GoogleCloudSecuritycenterV1Property(BaseModel):
    name: Optional[str] = Field(
        None, description='Name of the property for the custom output.'
    )
    valueExpression: Optional[Expr] = Field(
        None,
        description='The CEL expression for the custom output. A resource property can be specified to return the value of the property or a text string enclosed in quotation marks.',
    )


class GoogleCloudSecuritycenterV1Resource(BaseModel):
    displayName: Optional[str] = Field(
        None, description='The human readable name of the resource.'
    )
    folders: Optional[List[Folder]] = Field(
        None,
        description='Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.',
    )
    name: Optional[str] = Field(
        None,
        description='The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name',
    )
    parent: Optional[str] = Field(
        None, description="The full resource name of resource's parent."
    )
    parentDisplayName: Optional[str] = Field(
        None, description="The human readable name of resource's parent."
    )
    project: Optional[str] = Field(
        None,
        description='The full resource name of project that the resource belongs to.',
    )
    projectDisplayName: Optional[str] = Field(
        None, description='The project ID that the resource belongs to.'
    )
    type: Optional[str] = Field(
        None, description='The full resource type of the resource.'
    )


class GoogleCloudSecuritycenterV1ResourceSelector(BaseModel):
    resourceTypes: Optional[List[str]] = Field(
        None, description='The resource types to run the detector on.'
    )


class State1(Enum):
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    COMPLETED = 'COMPLETED'
    SUPERSEDED = 'SUPERSEDED'
    TERMINATED = 'TERMINATED'


class GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse(BaseModel):
    duration: Optional[str] = Field(
        None, description='The duration between asset discovery run start and end'
    )
    state: Optional[State1] = Field(
        None, description='The state of an asset discovery run.'
    )


class EnablementState1(Enum):
    ENABLEMENT_STATE_UNSPECIFIED = 'ENABLEMENT_STATE_UNSPECIFIED'
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'
    INHERITED = 'INHERITED'


class GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse(BaseModel):
    duration: Optional[str] = Field(
        None, description='The duration between asset discovery run start and end'
    )
    state: Optional[State1] = Field(
        None, description='The state of an asset discovery run.'
    )


class State3(Enum):
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class GoogleCloudSecuritycenterV1p1beta1Folder(BaseModel):
    resourceFolder: Optional[str] = Field(
        None,
        description='Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name',
    )
    resourceFolderDisplayName: Optional[str] = Field(
        None, description='The user defined display name for this folder.'
    )


class GoogleCloudSecuritycenterV1p1beta1Resource(BaseModel):
    folders: Optional[List[GoogleCloudSecuritycenterV1p1beta1Folder]] = Field(
        None,
        description='Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.',
    )
    name: Optional[str] = Field(
        None,
        description='The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name',
    )
    parent: Optional[str] = Field(
        None, description="The full resource name of resource's parent."
    )
    parentDisplayName: Optional[str] = Field(
        None, description="The human readable name of resource's parent."
    )
    project: Optional[str] = Field(
        None,
        description='The full resource name of project that the resource belongs to.',
    )
    projectDisplayName: Optional[str] = Field(
        None, description='The project id that the resource belongs to.'
    )


class State4(Enum):
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    COMPLETED = 'COMPLETED'
    SUPERSEDED = 'SUPERSEDED'
    TERMINATED = 'TERMINATED'


class GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse(BaseModel):
    duration: Optional[str] = Field(
        None, description='The duration between asset discovery run start and end'
    )
    state: Optional[State4] = Field(
        None, description='The state of an asset discovery run.'
    )


class GoogleCloudSecuritycenterV1p1beta1SecurityMarks(BaseModel):
    canonicalName: Optional[str] = Field(
        None,
        description='The canonical name of the marks. Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "folders/{folder_id}/assets/{asset_id}/securityMarks" "projects/{project_number}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"',
    )
    marks: Optional[Dict[str, str]] = Field(
        None,
        description='Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)',
    )
    name: Optional[str] = Field(
        None,
        description='The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".',
    )


class Action(Enum):
    ACTION_UNSPECIFIED = 'ACTION_UNSPECIFIED'
    ADD = 'ADD'
    REMOVE = 'REMOVE'


class IamBinding(BaseModel):
    action: Optional[Action] = Field(
        None, description='The action that was performed on a Binding.'
    )
    member: Optional[str] = Field(
        None,
        description='A single identity requesting access for a Cloud Platform resource, e.g. "foo@google.com".',
    )
    role: Optional[str] = Field(
        None,
        description='Role that is assigned to "members". For example, "roles/viewer", "roles/editor", or "roles/owner".',
    )


class KernelRootkit(BaseModel):
    name: Optional[str] = Field(None, description='Rootkit name when available.')
    unexpectedCodeModification: Optional[bool] = Field(
        None,
        description='True when unexpected modifications of kernel code memory are present.',
    )
    unexpectedFtraceHandler: Optional[bool] = Field(
        None,
        description='True when `ftrace` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.',
    )
    unexpectedInterruptHandler: Optional[bool] = Field(
        None,
        description='True when interrupt handlers that are are not in the expected kernel or module code regions are present.',
    )
    unexpectedKernelCodePages: Optional[bool] = Field(
        None,
        description='True when kernel code pages that are not in the expected kernel or module code regions are present.',
    )
    unexpectedKprobeHandler: Optional[bool] = Field(
        None,
        description='True when `kprobe` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.',
    )
    unexpectedProcessesInRunqueue: Optional[bool] = Field(
        None,
        description='True when unexpected processes in the scheduler run queue are present. Such processes are in the run queue, but not in the process task list.',
    )
    unexpectedReadOnlyDataModification: Optional[bool] = Field(
        None,
        description='True when unexpected modifications of kernel read-only data memory are present.',
    )
    unexpectedSystemCallHandler: Optional[bool] = Field(
        None,
        description='True when system call handlers that are are not in the expected kernel or module code regions are present.',
    )


class Label(BaseModel):
    name: Optional[str] = Field(None, description='Label name.')
    value: Optional[str] = Field(None, description='Label value.')


class MemoryHashSignature(BaseModel):
    binaryFamily: Optional[str] = Field(None, description='The binary family.')
    detections: Optional[List[Detection]] = Field(
        None,
        description='The list of memory hash detections contributing to the binary family match.',
    )


class AdditionalTactic(Enum):
    TACTIC_UNSPECIFIED = 'TACTIC_UNSPECIFIED'
    RECONNAISSANCE = 'RECONNAISSANCE'
    RESOURCE_DEVELOPMENT = 'RESOURCE_DEVELOPMENT'
    INITIAL_ACCESS = 'INITIAL_ACCESS'
    EXECUTION = 'EXECUTION'
    PERSISTENCE = 'PERSISTENCE'
    PRIVILEGE_ESCALATION = 'PRIVILEGE_ESCALATION'
    DEFENSE_EVASION = 'DEFENSE_EVASION'
    CREDENTIAL_ACCESS = 'CREDENTIAL_ACCESS'
    DISCOVERY = 'DISCOVERY'
    LATERAL_MOVEMENT = 'LATERAL_MOVEMENT'
    COLLECTION = 'COLLECTION'
    COMMAND_AND_CONTROL = 'COMMAND_AND_CONTROL'
    EXFILTRATION = 'EXFILTRATION'
    IMPACT = 'IMPACT'


class AdditionalTechnique(Enum):
    TECHNIQUE_UNSPECIFIED = 'TECHNIQUE_UNSPECIFIED'
    ACTIVE_SCANNING = 'ACTIVE_SCANNING'
    SCANNING_IP_BLOCKS = 'SCANNING_IP_BLOCKS'
    INGRESS_TOOL_TRANSFER = 'INGRESS_TOOL_TRANSFER'
    NATIVE_API = 'NATIVE_API'
    SHARED_MODULES = 'SHARED_MODULES'
    COMMAND_AND_SCRIPTING_INTERPRETER = 'COMMAND_AND_SCRIPTING_INTERPRETER'
    UNIX_SHELL = 'UNIX_SHELL'
    RESOURCE_HIJACKING = 'RESOURCE_HIJACKING'
    PROXY = 'PROXY'
    EXTERNAL_PROXY = 'EXTERNAL_PROXY'
    MULTI_HOP_PROXY = 'MULTI_HOP_PROXY'
    DYNAMIC_RESOLUTION = 'DYNAMIC_RESOLUTION'
    UNSECURED_CREDENTIALS = 'UNSECURED_CREDENTIALS'
    VALID_ACCOUNTS = 'VALID_ACCOUNTS'
    LOCAL_ACCOUNTS = 'LOCAL_ACCOUNTS'
    CLOUD_ACCOUNTS = 'CLOUD_ACCOUNTS'
    NETWORK_DENIAL_OF_SERVICE = 'NETWORK_DENIAL_OF_SERVICE'
    PERMISSION_GROUPS_DISCOVERY = 'PERMISSION_GROUPS_DISCOVERY'
    CLOUD_GROUPS = 'CLOUD_GROUPS'
    EXFILTRATION_OVER_WEB_SERVICE = 'EXFILTRATION_OVER_WEB_SERVICE'
    EXFILTRATION_TO_CLOUD_STORAGE = 'EXFILTRATION_TO_CLOUD_STORAGE'
    ACCOUNT_MANIPULATION = 'ACCOUNT_MANIPULATION'
    SSH_AUTHORIZED_KEYS = 'SSH_AUTHORIZED_KEYS'
    CREATE_OR_MODIFY_SYSTEM_PROCESS = 'CREATE_OR_MODIFY_SYSTEM_PROCESS'
    STEAL_WEB_SESSION_COOKIE = 'STEAL_WEB_SESSION_COOKIE'
    MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE = 'MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE'
    EXPLOIT_PUBLIC_FACING_APPLICATION = 'EXPLOIT_PUBLIC_FACING_APPLICATION'
    MODIFY_AUTHENTICATION_PROCESS = 'MODIFY_AUTHENTICATION_PROCESS'
    DATA_DESTRUCTION = 'DATA_DESTRUCTION'
    DOMAIN_POLICY_MODIFICATION = 'DOMAIN_POLICY_MODIFICATION'
    IMPAIR_DEFENSES = 'IMPAIR_DEFENSES'
    NETWORK_SERVICE_DISCOVERY = 'NETWORK_SERVICE_DISCOVERY'
    ACCESS_TOKEN_MANIPULATION = 'ACCESS_TOKEN_MANIPULATION'
    ABUSE_ELEVATION_CONTROL_MECHANISM = 'ABUSE_ELEVATION_CONTROL_MECHANISM'
    DEFAULT_ACCOUNTS = 'DEFAULT_ACCOUNTS'


class PrimaryTactic(Enum):
    TACTIC_UNSPECIFIED = 'TACTIC_UNSPECIFIED'
    RECONNAISSANCE = 'RECONNAISSANCE'
    RESOURCE_DEVELOPMENT = 'RESOURCE_DEVELOPMENT'
    INITIAL_ACCESS = 'INITIAL_ACCESS'
    EXECUTION = 'EXECUTION'
    PERSISTENCE = 'PERSISTENCE'
    PRIVILEGE_ESCALATION = 'PRIVILEGE_ESCALATION'
    DEFENSE_EVASION = 'DEFENSE_EVASION'
    CREDENTIAL_ACCESS = 'CREDENTIAL_ACCESS'
    DISCOVERY = 'DISCOVERY'
    LATERAL_MOVEMENT = 'LATERAL_MOVEMENT'
    COLLECTION = 'COLLECTION'
    COMMAND_AND_CONTROL = 'COMMAND_AND_CONTROL'
    EXFILTRATION = 'EXFILTRATION'
    IMPACT = 'IMPACT'


class PrimaryTechnique(Enum):
    TECHNIQUE_UNSPECIFIED = 'TECHNIQUE_UNSPECIFIED'
    ACTIVE_SCANNING = 'ACTIVE_SCANNING'
    SCANNING_IP_BLOCKS = 'SCANNING_IP_BLOCKS'
    INGRESS_TOOL_TRANSFER = 'INGRESS_TOOL_TRANSFER'
    NATIVE_API = 'NATIVE_API'
    SHARED_MODULES = 'SHARED_MODULES'
    COMMAND_AND_SCRIPTING_INTERPRETER = 'COMMAND_AND_SCRIPTING_INTERPRETER'
    UNIX_SHELL = 'UNIX_SHELL'
    RESOURCE_HIJACKING = 'RESOURCE_HIJACKING'
    PROXY = 'PROXY'
    EXTERNAL_PROXY = 'EXTERNAL_PROXY'
    MULTI_HOP_PROXY = 'MULTI_HOP_PROXY'
    DYNAMIC_RESOLUTION = 'DYNAMIC_RESOLUTION'
    UNSECURED_CREDENTIALS = 'UNSECURED_CREDENTIALS'
    VALID_ACCOUNTS = 'VALID_ACCOUNTS'
    LOCAL_ACCOUNTS = 'LOCAL_ACCOUNTS'
    CLOUD_ACCOUNTS = 'CLOUD_ACCOUNTS'
    NETWORK_DENIAL_OF_SERVICE = 'NETWORK_DENIAL_OF_SERVICE'
    PERMISSION_GROUPS_DISCOVERY = 'PERMISSION_GROUPS_DISCOVERY'
    CLOUD_GROUPS = 'CLOUD_GROUPS'
    EXFILTRATION_OVER_WEB_SERVICE = 'EXFILTRATION_OVER_WEB_SERVICE'
    EXFILTRATION_TO_CLOUD_STORAGE = 'EXFILTRATION_TO_CLOUD_STORAGE'
    ACCOUNT_MANIPULATION = 'ACCOUNT_MANIPULATION'
    SSH_AUTHORIZED_KEYS = 'SSH_AUTHORIZED_KEYS'
    CREATE_OR_MODIFY_SYSTEM_PROCESS = 'CREATE_OR_MODIFY_SYSTEM_PROCESS'
    STEAL_WEB_SESSION_COOKIE = 'STEAL_WEB_SESSION_COOKIE'
    MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE = 'MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE'
    EXPLOIT_PUBLIC_FACING_APPLICATION = 'EXPLOIT_PUBLIC_FACING_APPLICATION'
    MODIFY_AUTHENTICATION_PROCESS = 'MODIFY_AUTHENTICATION_PROCESS'
    DATA_DESTRUCTION = 'DATA_DESTRUCTION'
    DOMAIN_POLICY_MODIFICATION = 'DOMAIN_POLICY_MODIFICATION'
    IMPAIR_DEFENSES = 'IMPAIR_DEFENSES'
    NETWORK_SERVICE_DISCOVERY = 'NETWORK_SERVICE_DISCOVERY'
    ACCESS_TOKEN_MANIPULATION = 'ACCESS_TOKEN_MANIPULATION'
    ABUSE_ELEVATION_CONTROL_MECHANISM = 'ABUSE_ELEVATION_CONTROL_MECHANISM'
    DEFAULT_ACCOUNTS = 'DEFAULT_ACCOUNTS'


class MitreAttack(BaseModel):
    additionalTactics: Optional[List[AdditionalTactic]] = Field(
        None,
        description='Additional MITRE ATT&CK tactics related to this finding, if any.',
    )
    additionalTechniques: Optional[List[AdditionalTechnique]] = Field(
        None,
        description='Additional MITRE ATT&CK techniques related to this finding, if any, along with any of their respective parent techniques.',
    )
    primaryTactic: Optional[PrimaryTactic] = Field(
        None,
        description='The MITRE ATT&CK tactic most closely represented by this finding, if any.',
    )
    primaryTechniques: Optional[List[PrimaryTechnique]] = Field(
        None,
        description='The MITRE ATT&CK technique most closely represented by this finding, if any. primary_techniques is a repeated field because there are multiple levels of MITRE ATT&CK techniques. If the technique most closely represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`), both the sub-technique and its parent technique(s) will be listed (e.g. `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`).',
    )
    version: Optional[str] = Field(
        None,
        description='The MITRE ATT&CK version referenced by the above fields. E.g. "8".',
    )


class Node(BaseModel):
    name: Optional[str] = Field(
        None,
        description='Full Resource name of the Compute Engine VM running the cluster node.',
    )


class NodePool(BaseModel):
    name: Optional[str] = Field(None, description='Kubernetes Node pool name.')
    nodes: Optional[List[Node]] = Field(
        None, description='Nodes associated with the finding.'
    )


class OnboardingLevel(Enum):
    ONBOARDING_LEVEL_UNSPECIFIED = 'ONBOARDING_LEVEL_UNSPECIFIED'
    ONBOARDING_LEVEL_PROJECT = 'ONBOARDING_LEVEL_PROJECT'
    ONBOARDING_LEVEL_ORGANIZATION = 'ONBOARDING_LEVEL_ORGANIZATION'


class OnboardingState(BaseModel):
    name: Optional[str] = Field(
        None,
        description='The resource name of the OnboardingState. Format: organizations/{organization}/onboardingState Format: folders/{folder}/onboardingState Format: projects/{project}/onboardingState',
    )
    onboardingLevel: Optional[OnboardingLevel] = Field(
        None,
        description="Describes the level a given organization, folder, or project is onboarded with SCC. If the resource wasn't onboarded, NOT_FOUND would have been thrown.",
    )


class Process(BaseModel):
    args: Optional[List[str]] = Field(
        None, description='Process arguments as JSON encoded strings.'
    )
    argumentsTruncated: Optional[bool] = Field(
        None, description='True if `args` is incomplete.'
    )
    binary: Optional[File] = Field(
        None, description='File information for the process executable.'
    )
    envVariables: Optional[List[EnvironmentVariable]] = Field(
        None, description='Process environment variables.'
    )
    envVariablesTruncated: Optional[bool] = Field(
        None, description='True if `env_variables` is incomplete.'
    )
    libraries: Optional[List[File]] = Field(
        None, description='File information for libraries loaded by the process.'
    )
    name: Optional[str] = Field(
        None,
        description='The process name visible in utilities like `top` and `ps`; it can be accessed via `/proc/[pid]/comm` and changed with `prctl(PR_SET_NAME)`.',
    )
    parentPid: Optional[str] = Field(None, description='The parent process id.')
    pid: Optional[str] = Field(None, description='The process id.')
    script: Optional[File] = Field(
        None,
        description='When the process represents the invocation of a script, `binary` provides information about the interpreter while `script` provides information about the script file provided to the interpreter.',
    )


class RapidVulnerabilityDetectionSettings(BaseModel):
    modules: Optional[Dict[str, Config]] = Field(
        None,
        description="The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
    )
    name: Optional[str] = Field(
        None,
        description='The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings',
    )
    serviceEnablementState: Optional[ServiceEnablementState] = Field(
        None,
        description='The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.',
    )
    updateTime: Optional[str] = Field(
        None, description='Output only. The time the settings were last updated.'
    )


class Reference(BaseModel):
    source: Optional[str] = Field(None, description='Source of the reference e.g. NVD')
    uri: Optional[str] = Field(
        None,
        description='Uri for the mentioned source e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527.',
    )


class Kind(Enum):
    KIND_UNSPECIFIED = 'KIND_UNSPECIFIED'
    ROLE = 'ROLE'
    CLUSTER_ROLE = 'CLUSTER_ROLE'


class Role(BaseModel):
    kind: Optional[Kind] = Field(None, description='Role type.')
    name: Optional[str] = Field(None, description='Role name.')
    ns: Optional[str] = Field(None, description='Role namespace.')


class SecurityCenterSettings(BaseModel):
    logSinkProject: Optional[str] = Field(
        None,
        description='The resource name of the project to send logs to. This project must be part of the organization this resource resides in. The format is `projects/{project_id}`. An empty value disables logging. This value is only referenced by services that support log sink. Please refer to the documentation for an updated list of compatible services. This may only be specified for organization level onboarding.',
    )
    name: Optional[str] = Field(
        None,
        description='The resource name of the SecurityCenterSettings. Format: organizations/{organization}/securityCenterSettings Format: folders/{folder}/securityCenterSettings Format: projects/{project}/securityCenterSettings',
    )
    onboardingTime: Optional[str] = Field(
        None,
        description='Output only. Timestamp of when the customer organization was onboarded to SCC.',
    )
    orgServiceAccount: Optional[str] = Field(
        None,
        description='Output only. The organization level service account to be used for security center components.',
    )


class SecurityHealthAnalyticsSettings(BaseModel):
    modules: Optional[Dict[str, Config]] = Field(
        None,
        description="The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
    )
    name: Optional[str] = Field(
        None,
        description='The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings',
    )
    serviceAccount: Optional[str] = Field(
        None,
        description='Output only. The service account used by Security Health Analytics detectors.',
    )
    serviceEnablementState: Optional[ServiceEnablementState] = Field(
        None,
        description='The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.',
    )
    updateTime: Optional[str] = Field(
        None, description='Output only. The time the settings were last updated.'
    )


class SecurityMarks(BaseModel):
    canonicalName: Optional[str] = Field(
        None,
        description='The canonical name of the marks. Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "folders/{folder_id}/assets/{asset_id}/securityMarks" "projects/{project_number}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"',
    )
    marks: Optional[Dict[str, str]] = Field(
        None,
        description='Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)',
    )
    name: Optional[str] = Field(
        None,
        description='The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".',
    )


class ServiceAccountDelegationInfo(BaseModel):
    principalEmail: Optional[str] = Field(
        None, description='The email address of a Google account.'
    )
    principalSubject: Optional[str] = Field(
        None,
        description="A string representing the principal_subject associated with the identity. As compared to `principal_email`, supports principals that aren't associated with email addresses, such as third party principals. For most identities, the format will be `principal://iam.googleapis.com/{identity pool name}/subjects/{subject}` except for some GKE identities (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format `serviceAccount:{identity pool name}[{subject}]`",
    )


class Kind1(Enum):
    AUTH_TYPE_UNSPECIFIED = 'AUTH_TYPE_UNSPECIFIED'
    USER = 'USER'
    SERVICEACCOUNT = 'SERVICEACCOUNT'
    GROUP = 'GROUP'


class Subject(BaseModel):
    kind: Optional[Kind1] = Field(None, description='Authentication type for subject.')
    name: Optional[str] = Field(None, description='Name for subject.')
    ns: Optional[str] = Field(None, description='Namespace for subject.')


class Tier(Enum):
    TIER_UNSPECIFIED = 'TIER_UNSPECIFIED'
    STANDARD = 'STANDARD'
    PREMIUM = 'PREMIUM'


class Subscription(BaseModel):
    details: Optional[Details] = Field(
        None,
        description='The details of the most recent active subscription. If there has never been a subscription this will be empty.',
    )
    name: Optional[str] = Field(
        None,
        description='The resource name of the subscription. Format: organizations/{organization}/subscription',
    )
    tier: Optional[Tier] = Field(
        None,
        description='The tier of SCC features this organization currently has access to.',
    )


class VirtualMachineThreatDetectionSettings(BaseModel):
    modules: Optional[Dict[str, Config]] = Field(
        None,
        description="The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
    )
    name: Optional[str] = Field(
        None,
        description='The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings',
    )
    serviceAccount: Optional[str] = Field(
        None,
        description='Output only. The service account used by Virtual Machine Threat Detection detectors.',
    )
    serviceEnablementState: Optional[ServiceEnablementState] = Field(
        None,
        description='The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.',
    )
    updateTime: Optional[str] = Field(
        None, description='Output only. The time the settings were last updated.'
    )


class WebSecurityScannerSettings(BaseModel):
    modules: Optional[Dict[str, Config]] = Field(
        None,
        description="The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
    )
    name: Optional[str] = Field(
        None,
        description='The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings',
    )
    serviceEnablementState: Optional[ServiceEnablementState] = Field(
        None,
        description='The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.',
    )
    updateTime: Optional[str] = Field(
        None, description='Output only. The time the settings were last updated.'
    )


class YaraRuleSignature(BaseModel):
    yaraRule: Optional[str] = Field(None, description='The name of the YARA rule.')


class FieldXgafv(Enum):
    field_1 = '1'
    field_2 = '2'


class Alt(Enum):
    json = 'json'
    media = 'media'
    proto = 'proto'


class Access(BaseModel):
    callerIp: Optional[str] = Field(
        None, description='Caller\'s IP address, such as "1.1.1.1".'
    )
    callerIpGeo: Optional[Geolocation] = Field(
        None,
        description="The caller IP's geolocation, which identifies where the call came from.",
    )
    methodName: Optional[str] = Field(
        None,
        description='The method that the service account called, e.g. "SetIamPolicy".',
    )
    principalEmail: Optional[str] = Field(
        None,
        description='Associated email, such as "foo@google.com". The email address of the authenticated user or a service account acting on behalf of a third party principal making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).',
    )
    principalSubject: Optional[str] = Field(
        None,
        description="A string that represents the principal_subject that is associated with the identity. Unlike `principal_email`, `principal_subject` supports principals that aren't associated with email addresses, such as third party principals. For most identities, the format is `principal://iam.googleapis.com/{identity pool name}/subject/{subject}`. Some GKE identities, such as GKE_WORKLOAD, FREEFORM, and GKE_HUB_WORKLOAD, still use the legacy format `serviceAccount:{identity pool name}[{subject}]`.",
    )
    serviceAccountDelegationInfo: Optional[List[ServiceAccountDelegationInfo]] = Field(
        None,
        description='The identity delegation history of an authenticated service account that made the request. The `serviceAccountDelegationInfo[]` object contains information about the real authorities that try to access Google Cloud resources by delegating on a service account. When multiple authorities are present, they are guaranteed to be sorted based on the original ordering of the identity delegation events.',
    )
    serviceAccountKeyName: Optional[str] = Field(
        None,
        description='The name of the service account key that was used to create or exchange credentials when authenticating the service account that made the request. This is a scheme-less URI full resource name. For example: "//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}". ',
    )
    serviceName: Optional[str] = Field(
        None,
        description='This is the API service that the service account made a call to, e.g. "iam.googleapis.com"',
    )
    userAgentFamily: Optional[str] = Field(
        None,
        description='Type of user agent associated with the finding. For example, an operating system shell or an embedded or standalone application.',
    )
    userName: Optional[str] = Field(
        None,
        description='A string that represents a username. The username provided depends on the type of the finding and is likely not an IAM principal. For example, this can be a system username if the finding is related to a virtual machine, or it can be an application login username.',
    )


class Container(BaseModel):
    imageId: Optional[str] = Field(
        None,
        description='Optional container image id, when provided by the container runtime. Uniquely identifies the container image launched using a container image digest.',
    )
    labels: Optional[List[Label]] = Field(
        None, description='Container labels, as provided by the container runtime.'
    )
    name: Optional[str] = Field(None, description='Container name.')
    uri: Optional[str] = Field(
        None,
        description='Container image URI provided when configuring a pod/container. May identify a container image version using mutable tags.',
    )


class Cve(BaseModel):
    cvssv3: Optional[Cvssv3] = Field(
        None,
        description='Describe Common Vulnerability Scoring System specified at https://www.first.org/cvss/v3.1/specification-document',
    )
    id: Optional[str] = Field(
        None,
        description='The unique identifier for the vulnerability. e.g. CVE-2021-34527',
    )
    references: Optional[List[Reference]] = Field(
        None,
        description='Additional information about the CVE. e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527',
    )
    upstreamFixAvailable: Optional[bool] = Field(
        None, description='Whether upstream fix is available for the CVE.'
    )


class GoogleCloudSecuritycenterV1Binding(BaseModel):
    name: Optional[str] = Field(None, description='Name for binding.')
    ns: Optional[str] = Field(None, description='Namespace for binding.')
    role: Optional[Role] = Field(
        None, description='The Role or ClusterRole referenced by the binding.'
    )
    subjects: Optional[List[Subject]] = Field(
        None,
        description='Represents one or more subjects that are bound to the role. Not always available for PATCH requests.',
    )


class GoogleCloudSecuritycenterV1CustomOutputSpec(BaseModel):
    properties: Optional[List[GoogleCloudSecuritycenterV1Property]] = Field(
        None, description='A list of custom output properties to add to the finding.'
    )


class GoogleCloudSecuritycenterV1p1beta1Finding(BaseModel):
    canonicalName: Optional[str] = Field(
        None,
        description='The canonical name of the finding. It\'s either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of the resource associated with the finding.',
    )
    category: Optional[str] = Field(
        None,
        description='The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"',
    )
    createTime: Optional[str] = Field(
        None,
        description='The time at which the finding was created in Security Command Center.',
    )
    eventTime: Optional[str] = Field(
        None,
        description='The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved. Must not be set to a value greater than the current timestamp.',
    )
    externalUri: Optional[str] = Field(
        None,
        description='The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.',
    )
    name: Optional[str] = Field(
        None,
        description='The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"',
    )
    parent: Optional[str] = Field(
        None,
        description='The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"',
    )
    resourceName: Optional[str] = Field(
        None,
        description='For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.',
    )
    securityMarks: Optional[GoogleCloudSecuritycenterV1p1beta1SecurityMarks] = Field(
        None,
        description='Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding.',
    )
    severity: Optional[Severity] = Field(
        None,
        description='The severity of the finding. This field is managed by the source that writes the finding.',
    )
    sourceProperties: Optional[Dict[str, Any]] = Field(
        None,
        description='Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.',
    )
    state: Optional[State3] = Field(None, description='The state of the finding.')


class GoogleCloudSecuritycenterV1p1beta1NotificationMessage(BaseModel):
    finding: Optional[GoogleCloudSecuritycenterV1p1beta1Finding] = Field(
        None,
        description="If it's a Finding based notification config, this field will be populated.",
    )
    notificationConfigName: Optional[str] = Field(
        None,
        description='Name of the notification config that generated current notification.',
    )
    resource: Optional[GoogleCloudSecuritycenterV1p1beta1Resource] = Field(
        None, description='The Cloud resource tied to the notification.'
    )


class Pod(BaseModel):
    containers: Optional[List[Container]] = Field(
        None, description='Pod containers associated with this finding, if any.'
    )
    labels: Optional[List[Label]] = Field(
        None,
        description='Pod labels. For Kubernetes containers, these are applied to the container.',
    )
    name: Optional[str] = Field(None, description='Kubernetes Pod name.')
    ns: Optional[str] = Field(None, description='Kubernetes Pod namespace.')


class ProcessSignature(BaseModel):
    memoryHashSignature: Optional[MemoryHashSignature] = Field(
        None, description='Signature indicating that a binary family was matched.'
    )
    yaraRuleSignature: Optional[YaraRuleSignature] = Field(
        None, description='Signature indicating that a YARA rule was matched.'
    )


class Vulnerability(BaseModel):
    cve: Optional[Cve] = Field(
        None,
        description='CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)',
    )


class GoogleCloudSecuritycenterV1CustomConfig(BaseModel):
    customOutput: Optional[GoogleCloudSecuritycenterV1CustomOutputSpec] = Field(
        None, description='Custom output properties.'
    )
    description: Optional[str] = Field(
        None,
        description='Text that describes the vulnerability or misconfiguration that the custom module detects. This explanation is returned with each finding instance to help investigators understand the detected issue. The text must be enclosed in quotation marks.',
    )
    predicate: Optional[Expr] = Field(
        None,
        description='The CEL expression to evaluate to produce findings. When the expression evaluates to true against a resource, a finding is generated.',
    )
    recommendation: Optional[str] = Field(
        None,
        description='An explanation of the recommended steps that security teams can take to resolve the detected issue. This explanation is returned with each finding generated by this module in the `nextSteps` property of the finding JSON.',
    )
    resourceSelector: Optional[GoogleCloudSecuritycenterV1ResourceSelector] = Field(
        None,
        description='The resource types that the custom module operates on. Each custom module can specify up to 5 resource types.',
    )
    severity: Optional[Severity] = Field(
        None, description='The severity to assign to findings generated by the module.'
    )


class GoogleCloudSecuritycenterV1EffectiveSecurityHealthAnalyticsCustomModule(
    BaseModel
):
    customConfig: Optional[GoogleCloudSecuritycenterV1CustomConfig] = Field(
        None,
        description='Output only. The user-specified configuration for the module.',
    )
    displayName: Optional[str] = Field(
        None,
        description='Output only. The display name for the custom module. The name must be between 1 and 128 characters, start with a lowercase letter, and contain alphanumeric characters or underscores only.',
    )
    enablementState: Optional[EnablementState] = Field(
        None,
        description='Output only. The effective state of enablement for the module at the given level of the hierarchy.',
    )
    name: Optional[str] = Field(
        None,
        description='Output only. The resource name of the custom module. Its format is "organizations/{organization}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}", or "folders/{folder}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}", or "projects/{project}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}"',
    )


class GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule(BaseModel):
    ancestorModule: Optional[str] = Field(
        None,
        description='Output only. If empty, indicates that the custom module was created in the organization, folder, or project in which you are viewing the custom module. Otherwise, `ancestor_module` specifies the organization or folder from which the custom module is inherited.',
    )
    customConfig: Optional[GoogleCloudSecuritycenterV1CustomConfig] = Field(
        None, description='The user specified custom configuration for the module.'
    )
    displayName: Optional[str] = Field(
        None,
        description='The display name of the Security Health Analytics custom module. This display name becomes the finding category for all findings that are returned by this custom module. The display name must be between 1 and 128 characters, start with a lowercase letter, and contain alphanumeric characters or underscores only.',
    )
    enablementState: Optional[EnablementState1] = Field(
        None, description='The enablement state of the custom module.'
    )
    lastEditor: Optional[str] = Field(
        None, description='Output only. The editor that last updated the custom module.'
    )
    name: Optional[str] = Field(
        None,
        description='Immutable. The resource name of the custom module. Its format is "organizations/{organization}/securityHealthAnalyticsSettings/customModules/{customModule}", or "folders/{folder}/securityHealthAnalyticsSettings/customModules/{customModule}", or "projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}" The id {customModule} is server-generated and is not user settable. It will be a numeric id containing 1-20 digits.',
    )
    updateTime: Optional[str] = Field(
        None,
        description='Output only. The time at which the custom module was last updated.',
    )


class Indicator(BaseModel):
    domains: Optional[List[str]] = Field(
        None, description='List of domains associated to the Finding.'
    )
    ipAddresses: Optional[List[str]] = Field(
        None,
        description='The list of IP addresses that are associated with the finding.',
    )
    signatures: Optional[List[ProcessSignature]] = Field(
        None,
        description='The list of matched signatures indicating that the given process is present in the environment.',
    )
    uris: Optional[List[str]] = Field(
        None, description='The list of URIs associated to the Findings.'
    )


class Kubernetes(BaseModel):
    accessReviews: Optional[List[AccessReview]] = Field(
        None,
        description='Provides information on any Kubernetes access reviews (i.e. privilege checks) relevant to the finding.',
    )
    bindings: Optional[List[GoogleCloudSecuritycenterV1Binding]] = Field(
        None,
        description='Provides Kubernetes role binding information for findings that involve RoleBindings or ClusterRoleBindings.',
    )
    nodePools: Optional[List[NodePool]] = Field(
        None,
        description='GKE Node Pools associated with the finding. This field will contain NodePool information for each Node, when it is available.',
    )
    nodes: Optional[List[Node]] = Field(
        None, description='Provides Kubernetes Node information.'
    )
    pods: Optional[List[Pod]] = Field(
        None,
        description='Kubernetes Pods associated with the finding. This field will contain Pod records for each container that is owned by a Pod.',
    )
    roles: Optional[List[Role]] = Field(
        None,
        description='Provides Kubernetes role information for findings that involve Roles or ClusterRoles.',
    )


class Finding(BaseModel):
    access: Optional[Access] = Field(
        None,
        description='Access details associated with the finding, such as more information on the caller, which method was accessed, and from where.',
    )
    canonicalName: Optional[str] = Field(
        None,
        description='The canonical name of the finding. It\'s either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of the resource associated with the finding.',
    )
    category: Optional[str] = Field(
        None,
        description='The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"',
    )
    cloudDlpDataProfile: Optional[CloudDlpDataProfile] = Field(
        None, description='Cloud DLP data profile that is associated with the finding.'
    )
    cloudDlpInspection: Optional[CloudDlpInspection] = Field(
        None,
        description='Cloud Data Loss Prevention (Cloud DLP) inspection results that are associated with the finding.',
    )
    compliances: Optional[List[Compliance]] = Field(
        None,
        description='Contains compliance information for security standards associated to the finding.',
    )
    connections: Optional[List[Connection]] = Field(
        None,
        description='Contains information about the IP connection associated with the finding.',
    )
    contacts: Optional[Dict[str, ContactDetails]] = Field(
        None,
        description='Output only. Map containing the points of contact for the given finding. The key represents the type of contact, while the value contains a list of all the contacts that pertain. Please refer to: https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories { "security": { "contacts": [ { "email": "person1@company.com" }, { "email": "person2@company.com" } ] } }',
    )
    containers: Optional[List[Container]] = Field(
        None,
        description='Containers associated with the finding. This field provides information for both Kubernetes and non-Kubernetes containers.',
    )
    createTime: Optional[str] = Field(
        None,
        description='The time at which the finding was created in Security Command Center.',
    )
    database: Optional[Database] = Field(
        None, description='Database associated with the finding.'
    )
    description: Optional[str] = Field(
        None, description='Contains more details about the finding.'
    )
    eventTime: Optional[str] = Field(
        None,
        description='The time the finding was first detected. If an existing finding is updated, then this is the time the update occurred. For example, if the finding represents an open firewall, this property captures the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding is later resolved, then this time reflects when the finding was resolved. This must not be set to a value greater than the current timestamp.',
    )
    exfiltration: Optional[Exfiltration] = Field(
        None, description='Represents exfiltrations associated with the finding.'
    )
    externalSystems: Optional[Dict[str, GoogleCloudSecuritycenterV1ExternalSystem]] = (
        Field(
            None,
            description='Output only. Third party SIEM/SOAR fields within SCC, contains external system information and external system finding fields.',
        )
    )
    externalUri: Optional[str] = Field(
        None,
        description='The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.',
    )
    files: Optional[List[File]] = Field(
        None, description='File associated with the finding.'
    )
    findingClass: Optional[FindingClass] = Field(
        None, description='The class of the finding.'
    )
    iamBindings: Optional[List[IamBinding]] = Field(
        None, description='Represents IAM bindings associated with the finding.'
    )
    indicator: Optional[Indicator] = Field(
        None,
        description="Represents what's commonly known as an *indicator of compromise* (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. For more information, see [Indicator of compromise](https://en.wikipedia.org/wiki/Indicator_of_compromise).",
    )
    kernelRootkit: Optional[KernelRootkit] = Field(
        None, description='Signature of the kernel rootkit.'
    )
    kubernetes: Optional[Kubernetes] = Field(
        None, description='Kubernetes resources associated with the finding.'
    )
    mitreAttack: Optional[MitreAttack] = Field(
        None,
        description='MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org',
    )
    moduleName: Optional[str] = Field(
        None,
        description='Unique identifier of the module which generated the finding. Example: folders/598186756061/securityHealthAnalyticsSettings/customModules/56799441161885',
    )
    mute: Optional[Mute] = Field(
        None,
        description="Indicates the mute state of a finding (either muted, unmuted or undefined). Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.",
    )
    muteInitiator: Optional[str] = Field(
        None,
        description='Records additional information about the mute operation, for example, the [mute configuration](/security-command-center/docs/how-to-mute-findings) that muted the finding and the user who muted the finding.',
    )
    muteUpdateTime: Optional[str] = Field(
        None,
        description='Output only. The most recent time this finding was muted or unmuted.',
    )
    name: Optional[str] = Field(
        None,
        description='The [relative resource name](https://cloud.google.com/apis/design/resource_names#relative_resource_name) of the finding. Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}", "projects/{project_id}/sources/{source_id}/findings/{finding_id}".',
    )
    nextSteps: Optional[str] = Field(None, description='Steps to address the finding.')
    parent: Optional[str] = Field(
        None,
        description='The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"',
    )
    parentDisplayName: Optional[str] = Field(
        None,
        description='Output only. The human readable display name of the finding source such as "Event Threat Detection" or "Security Health Analytics".',
    )
    processes: Optional[List[Process]] = Field(
        None,
        description='Represents operating system processes associated with the Finding.',
    )
    resourceName: Optional[str] = Field(
        None,
        description='For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.',
    )
    securityMarks: Optional[SecurityMarks] = Field(
        None,
        description='Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding.',
    )
    severity: Optional[Severity] = Field(
        None,
        description='The severity of the finding. This field is managed by the source that writes the finding.',
    )
    sourceProperties: Optional[Dict[str, Any]] = Field(
        None,
        description='Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.',
    )
    state: Optional[State] = Field(None, description='The state of the finding.')
    vulnerability: Optional[Vulnerability] = Field(
        None,
        description='Represents vulnerability-specific fields like CVE and CVSS scores. CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)',
    )


class GoogleCloudSecuritycenterV1NotificationMessage(BaseModel):
    finding: Optional[Finding] = Field(
        None,
        description="If it's a Finding based notification config, this field will be populated.",
    )
    notificationConfigName: Optional[str] = Field(
        None,
        description='Name of the notification config that generated current notification.',
    )
    resource: Optional[GoogleCloudSecuritycenterV1Resource] = Field(
        None, description="The Cloud resource tied to this notification's Finding."
    )
